# Generated by Django 3.2.5 on 2022-03-21 11:27

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('division', models.CharField(blank=True, choices=[('D/HCW/MS', 'Doctor/Health Care Worker/Medical Staff'), ('I/SP', 'Insurance/Health Service Provider'), ('MSh', 'Medical Shop/Lab'), ('NoU', 'Normal User')], default='NoU', max_length=20, null=True, verbose_name='Division')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='HealthStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('last_updated', models.DateTimeField(default=django.utils.timezone.now)),
            ],
        ),
        migrations.CreateModel(
            name='MedWorkerRep',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_com_name', models.CharField(default=None, max_length=40, verbose_name='Full Name/Company Name')),
                ('department', models.CharField(blank=True, default=None, max_length=60, null=True)),
                ('reg_no', models.CharField(default=None, max_length=20, verbose_name='Registration No./License ID')),
                ('hcwvid', models.CharField(default=None, max_length=11, unique=True, validators=[django.core.validators.MinLengthValidator(11)], verbose_name='Health Care Worker/Vendor ID')),
                ('public', models.BooleanField(default=False)),
                ('contact_number', models.CharField(blank=True, default=None, max_length=10, null=True, validators=[django.core.validators.MinLengthValidator(10)], verbose_name='Contact Number')),
                ('address', models.CharField(blank=True, default=None, max_length=300, null=True, verbose_name='Address')),
                ('city', models.CharField(blank=True, default=None, max_length=100, null=True, verbose_name='City/Town')),
                ('state', models.CharField(blank=True, default=None, max_length=100, null=True, verbose_name='State/Union Territory')),
                ('pincode', models.CharField(blank=True, default=None, max_length=6, null=True, validators=[django.core.validators.MinLengthValidator(6)])),
                ('account', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='account', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Medical Workers/Insurance Representives/Pharmaceutical Shops',
            },
        ),
        migrations.CreateModel(
            name='Patients',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('full_name', models.CharField(default=None, max_length=40, verbose_name='Full Name')),
                ('wbid', models.CharField(default=None, max_length=16, unique=True, validators=[django.core.validators.MinLengthValidator(16)], verbose_name='Well-Being ID')),
                ('aadharid', models.CharField(default=None, max_length=12, unique=True, validators=[django.core.validators.MinLengthValidator(12)], verbose_name='Aadhar ID')),
                ('hcw_v', models.ManyToManyField(blank=True, related_name='hcw_v', to='health_tracker.MedWorkerRep')),
                ('person', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='person', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name_plural': 'Patients',
            },
        ),
        migrations.CreateModel(
            name='Notification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('content', models.CharField(max_length=15, verbose_name='Message Content')),
                ('date_of_approval', models.DateTimeField(default=django.utils.timezone.now)),
                ('receiver', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='receiver', to=settings.AUTH_USER_MODEL, verbose_name='Receiver')),
                ('sender', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='sender', to=settings.AUTH_USER_MODEL, verbose_name='Sender')),
            ],
        ),
        migrations.CreateModel(
            name='HealthValue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('health_condition', models.CharField(default=None, max_length=100, verbose_name='Health Condition')),
                ('maximum_value', models.FloatField(blank=True, default=None, null=True, verbose_name='Maximum Value')),
                ('minimum_value', models.FloatField(blank=True, default=None, null=True, verbose_name='Minimum Value')),
                ('patient_value', models.FloatField(default=None, verbose_name="Patient's Value")),
                ('condition_category', models.CharField(choices=[('', '----'), ('SAFE', 'Safe'), ('WARNING', 'Warning'), ('DANGER', 'Danger'), ('BDL-SAFE', 'Borderline-Safe'), ('BDL-DANGER', 'Borderline-Danger'), ('NA', 'Not Applicable')], default=None, max_length=20, verbose_name='Health Condition Category')),
                ('health_status', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='health_status', to='health_tracker.healthstatus', verbose_name='Health Status')),
            ],
        ),
        migrations.AddField(
            model_name='healthstatus',
            name='last_updated_by',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='last_updated_by', to='health_tracker.medworkerrep', verbose_name='Last Updated By'),
        ),
        migrations.AddField(
            model_name='healthstatus',
            name='patient',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='patient', to='health_tracker.patients', verbose_name='Patient'),
        ),
        migrations.CreateModel(
            name='Files',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tags', models.CharField(blank=True, default=None, max_length=200, null=True, verbose_name='Tags/Keywords')),
                ('file', models.FileField(default=None, unique=True, upload_to='', verbose_name='File Path')),
                ('vendor_name', models.CharField(blank=True, default=None, max_length=40, null=True, verbose_name='Name of person uploading this document')),
                ('date', models.DateTimeField(default=django.utils.timezone.now)),
                ('file_type', models.CharField(choices=[('PRSCN', 'Prescription'), ('S/T', 'Schedule/Timetable'), ('HR/TR', 'Health Report/Test Report'), ('INVCE', 'Invoice'), ('OP', 'Operative Report'), ('DS', 'Discharge Summary'), ('MSC', 'Miscellaneous')], default='MSC', max_length=20, verbose_name='File Type')),
                ('recipent', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, related_name='recipent', to='health_tracker.patients', verbose_name='Recipent')),
                ('uploader', models.ForeignKey(default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='uploader', to='health_tracker.medworkerrep', verbose_name='Uploaded By')),
            ],
        ),
    ]
